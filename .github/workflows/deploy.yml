name: Deploy

on:
   push:
      branches:
         - master
   pull_request:

jobs:
   #  prettier:
   #     name: Check prettier
   #     runs-on: ubuntu-latest
   #     steps:
   #        - uses: actions/checkout@v2
   #        - uses: actions/setup-node@v2
   #          with:
   #             node-version: '14'
   #             cache: yarn
   #        - run: yarn install
   #        - run: yarn check:prettier

   #  typescript:
   #     name: Check typescript
   #     runs-on: ubuntu-latest
   #     steps:
   #        - uses: actions/checkout@v2
   #        - uses: actions/setup-node@v2
   #          with:
   #             node-version: '14'
   #             cache: yarn
   #        - run: yarn install
   #        - run: yarn prisma generate
   #        - run: yarn check:typescript

   #  eslint:
   #     name: Check eslint
   #     runs-on: ubuntu-latest
   #     steps:
   #        - uses: actions/checkout@v2
   #        - uses: actions/setup-node@v2
   #          with:
   #             node-version: '14'
   #             cache: yarn
   #        - run: yarn install
   #        - run: yarn check:eslint

   #  unit_tests:
   #     name: Unit tests
   #     runs-on: ubuntu-latest
   #     needs: [prettier, typescript, eslint]
   #     steps:
   #        - uses: actions/checkout@v2
   #        - uses: actions/setup-node@v2
   #          with:
   #             node-version: '14'
   #             cache: yarn
   #        - run: yarn install
   #        - run: yarn tests --ci

   #  integration_tests:
   #     name: Integration tests
   #     runs-on: ubuntu-latest
   #     needs: [prettier, typescript, eslint]
   #     services:
   #        postgres:
   #           image: postgres:latest
   #           env:
   #              POSTGRES_DB: '${{secrets.POSTGRES_DB}}'
   #              POSTGRES_PASSWORD: '${{secrets.POSTGRES_PASSWORD}}'
   #              POSTGRES_USER: '${{secrets.POSTGRES_USER}}'
   #           ports:
   #              - 5432:5432
   #           options: >-
   #              --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
   #     steps:
   #        - uses: actions/checkout@v2
   #        - run: yarn prisma migrate deploy
   #          env:
   #             DATABASE_URL: '${{secrets.DATABASE_URL}}'
   #        - uses: cypress-io/github-action@v2
   #          env:
   #             DATABASE_URL: '${{secrets.DATABASE_URL}}'
   #             NEXTAUTH_URL: '${{secrets.NEXTAUTH_URL}}'
   #          with:
   #             build: yarn build
   #             start: yarn start
   #             wait-on: 'http://localhost:3000'
   #             wait-on-timeout: 120
   #             command: yarn tests:e2e:ci

   production:
      name: Production
      runs-on: ubuntu-latest
      # needs: [unit_tests, integration_tests]
      if: github.ref == 'refs/heads/master'
      steps:
         - uses: actions/checkout@v2
         - uses: actions/setup-node@v2
           with:
              node-version: '14'
              cache: yarn
         - run: yarn install
         - run: yarn prisma generate
         - run: yarn build
         - name: Pulling changes & migrating database
           uses: appleboy/ssh-action@master
           with:
              host: ${{ secrets.HOST }}
              username: ${{ secrets.USERNAME }}
              key: ${{ secrets.SSHKEY }}
              port: ${{ secrets.PORT }}
              script: cd ~/taktix && /root/.yarn/bin/yarn prisma migrate deploy
         - uses: shimataro/ssh-key-action@v2
           with:
              key: ${{ secrets.SSHKEY }}
              known_hosts: 'taktix-ci-cd'
         - run: rsync -avz .next/. ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/root/taktix/
         - name: Reloading PM2 process
           uses: appleboy/ssh-action@master
           with:
              host: ${{ secrets.HOST }}
              username: ${{ secrets.USERNAME }}
              key: ${{ secrets.SSHKEY }}
              port: ${{ secrets.PORT }}
              script: /usr/local/bin/pm2 reload "Taktix"
